{"version":3,"file":"StickerPackDetail-CkMWHFD2.js","sources":["../src/components/pack/NsfwModal.tsx","../src/components/pack/Sticker.tsx","../src/components/pack/StickerPackError.tsx","../src/components/pack/Tag.tsx","../src/components/pack/StickerPackDetail.tsx"],"sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport {BsExclamationTriangle} from 'react-icons/bs';\nimport {Link} from 'react-router-dom';\n\nimport ExternalLink from 'components/general/ExternalLink';\n\nimport classes from './NsfwModal.css';\n\n\nexport default function NsfwModal() {\n  /**\n   * Show the modal when the component is rendered for the first time.\n   */\n  React.useEffect(() => {\n    // @ts-expect-error\n    $('#nsfw-modal').modal({\n      show: true,\n      // These two settings ensure the modal cannot be dismissed by clicking the\n      // backdrop.\n      keyboard: false,\n      backdrop: 'static'\n    });\n\n    // By not adding this class to the markup, we ensure the modal (and our\n    // custom backdrop) appear immediately when the component renders. By adding\n    // it here, however, we ensure a smooth fade-out animation when the modal is\n    // closed.\n    $('#nsfw-modal').addClass('fade');\n\n    // We don't use Bootstrap's top-level backdrop, so hide it.\n    $('.modal-backdrop').css('display', 'none');\n  }, []);\n\n\n  /**\n   * Hides the modal when the 'Show pack' button is clicked.\n   */\n  const onHideNsfwModalClick = React.useCallback(() => {\n    // @ts-expect-error\n    $('#nsfw-modal').modal('hide');\n  }, []);\n\n\n  return (\n    <div\n      id=\"nsfw-modal\"\n      className={cx(classes.nsfwModal, 'modal')}\n      role=\"dialog\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">\n              <BsExclamationTriangle className=\"mr-1 text-primary\" /> Content Warning\n            </h3>\n          </div>\n          <div className=\"modal-body\">\n            <p>\n              This pack has been marked <i>Not Safe For Work</i> (<ExternalLink href=\"https://www.urbandictionary.com/define.php?term=NSFW\">NSFW</ExternalLink>).\n              <br />\n              This means that it may contain nudity, sexual content, or other potentially disturbing subject matter.\n            </p>\n            <p>You should not view this pack at work, or with children around.</p>\n          </div>\n          <div className=\"modal-footer\">\n            <Link\n              to=\"/\"\n              className=\"btn btn-light\"\n              title=\"Go back home\"\n            >\n              Go back home\n            </Link>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={onHideNsfwModalClick}\n            >\n              Show the pack\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport useAsyncEffect from 'use-async-effect';\n\nimport { getConvertedStickerInPack, getEmojiForSticker } from 'lib/stickers';\n\nimport classes from './Sticker.css';\n\n\nexport interface StickerProps {\n  packId: string;\n  packKey: string;\n  stickerId: number;\n}\n\n\nexport default function Sticker({ packId, packKey, stickerId }: StickerProps) {\n  const [emoji, setEmoji] = React.useState('');\n  const [stickerSrc, setStickerSrc] = React.useState('');\n\n\n  /**\n   * [Effect] Load sticker data and emoji for the sticker indicated in our\n   * props.\n   */\n  useAsyncEffect(async isMounted => {\n    const [\n      emojiResult,\n      stickerResult\n    ] = await Promise.all([\n      getEmojiForSticker(packId, packKey, stickerId),\n      getConvertedStickerInPack(packId, packKey, stickerId)\n    ]);\n\n    // The user may have navigated away from this page before all stickers have\n    // loaded, causing the component to un-mount before the above Promises\n    // resolve. Calling setState on an un-mounted component is a no-op, but\n    // triggers a warning in development mode. Fortunately, use-async-effect\n    // provides an isMounted predicate we can call to determine if we should\n    // proceed with updating a component's state after potentially lengthy async\n    // operations.\n    if (isMounted()) {\n      setEmoji(emojiResult);\n      setStickerSrc(stickerResult);\n    }\n  }, [\n    packId,\n    packKey,\n    stickerId\n  ]);\n\n\n  return (\n    <div className={classes.sticker}>\n      {emoji && stickerSrc ?\n        <>\n          <div className={classes.stickerEmoji}>\n            {emoji}\n          </div>\n          <img\n            src={stickerSrc}\n            alt=\"Sticker\"\n            className=\"w-100 h-100\"\n          />\n        </> :\n        <div className=\"spinner-border text-light\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      }\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport default function StickerPackError({ children }: React.PropsWithChildren) {\n  return (\n    <div className=\"p-4 my-4\">\n      <div className=\"row mb-4\">\n        <div className=\"col-10 offset-1 alert alert-danger\">\n          <h3 className=\"alert-heading mt-1 mb-3\">Error</h3>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport StickersContext from 'contexts/StickersContext';\n\n\nexport interface TagProps {\n  className?: string;\n  label: string;\n}\n\n\nexport default function Tag({className, label}: TagProps) {\n  // Current search query, will be used if the users clicks on tags\n  const {searcher, setSearchQuery} = React.useContext(StickersContext);\n  const history = useHistory();\n\n  /**\n   * [Event Handler] Search from packs with same tags.\n   */\n  const onTagClick = React.useCallback((event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (searcher) {\n      setSearchQuery(searcher.buildQueryString({\n        attributeQueries: [{\n          tag: label\n        }]\n      }));\n\n      history.push('/');\n    }\n  }, [searcher]);\n\n  return (\n    <button\n      type=\"button\"\n      title={`View more packs with tag \"${label}\"`}\n      className={cx(\n        'btn btn-primary btn-sm px-2 py-1 rounded-lg text-capitalize text-nowrap',\n        className\n      )}\n      role=\"link\"\n      onClick={onTagClick}\n    >\n      {label}\n    </button>\n  );\n}\n","import cx from 'classnames';\nimport pluralize from 'pluralize';\nimport React from 'react';\nimport {\n  BsArrowLeftShort,\n  BsAt,\n  BsFillHeartFill,\n  BsFillCameraVideoFill,\n  BsPlus,\n  BsStarFill,\n  BsTag\n} from 'react-icons/bs';\nimport { ImEye } from 'react-icons/im';\nimport Linkify from 'react-linkify';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport useAsyncEffect from 'use-async-effect';\n\nimport ExternalLink from 'components/general/ExternalLink';\nimport StickersContext from 'contexts/StickersContext';\nimport { StickerPack } from 'etc/types';\nimport useQuery from 'hooks/use-query';\nimport { getStickerPack } from 'lib/stickers';\nimport { sendPackBeacon } from 'lib/utils';\n\nimport NsfwModal from './NsfwModal';\nimport Sticker from './Sticker';\nimport classes from './StickerPackDetail.css';\nimport StickerPackError from './StickerPackError';\nimport Tag from './Tag';\n\n\n/**\n * URL parameters that we expect to have set when this component is rendered.\n */\nexport interface UrlParams {\n  packId: string;\n}\n\n\n/**\n * Custom component for Linkify links that adds \"target\" and \"rel\" attributes.\n */\nconst linkifyHrefDecorator = (decoratedHref: string, decoratedText: string, key: number) => {\n  return (\n    <ExternalLink href={decoratedHref} key={key}>{decoratedText}</ExternalLink>\n  );\n};\n\n\nexport default function StickerPackDetail() {\n  const { setSearchQuery, searcher } = React.useContext(StickersContext);\n  const history = useHistory();\n  const query = useQuery();\n\n  // Extract :packId from the URL.\n  const { packId } = useParams<UrlParams>();\n\n  // Extract the optional \"key\" query param from the URL.\n  const key = typeof query.key === 'string' ? query.key : undefined;\n\n  // StickerPack object for the requested pack.\n  const [stickerPack, setStickerPack] = React.useState<StickerPack>();\n\n  // One of many possible error codes we may catch when trying to load or\n  // decrypt a sticker pack. This will be used to determine what error message\n  // to show the user.\n  const [stickerPackError, setStickerPackError] = React.useState('');\n\n\n  /**\n   * [Effect] Set `stickerPack` when the component mounts.\n   */\n  useAsyncEffect(async () => {\n    try {\n      if (!packId) {\n        return;\n      }\n\n      setStickerPack(await getStickerPack(packId, key));\n      sendPackBeacon(packId);\n    } catch (err: any) {\n      if (err.code) {\n        setStickerPackError(err.code);\n      }\n    }\n  }, [\n    key,\n    packId\n  ]);\n\n\n  /**\n   * [Event Handler] Search for packs from the same author.\n   */\n  const onAuthorClick = React.useCallback((event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (searcher && event.currentTarget.textContent) {\n      setSearchQuery(searcher.buildQueryString({\n        attributeQueries: [{\n          author: event.currentTarget.textContent\n        }]\n      }));\n\n      history.push('/');\n    }\n  }, [\n    history,\n    searcher,\n    setSearchQuery\n  ]);\n\n\n  if (!packId || !stickerPack) {\n    // If an error code has been set, display an error alert to the user.\n    if (stickerPackError) {\n      switch (stickerPackError) {\n        case 'NO_KEY_PROVIDED':\n          return (\n            <StickerPackError>\n              <p>\n                This sticker pack is not listed in the Signal Stickers directory.\n                However, if you have the pack's <strong>key</strong>, you can\n                still preview the sticker pack by supplying a <code>key</code>\n                parameter in the URL.\n              </p>\n              <p>\n                For example: <code>{`/pack/${packId}?key=sticker-pack-key`}</code>\n              </p>\n            </StickerPackError>\n          );\n        case 'MANIFEST_DECRYPT':\n          return (\n            <StickerPackError>\n              <p>The provided key is invalid.</p>\n            </StickerPackError>\n          );\n        default:\n          return (\n            <StickerPackError>\n              <p>An unknown error occurred ({stickerPackError}).</p>\n            </StickerPackError>\n          );\n      }\n    }\n\n    // If we don't have an error, we're likely still waiting on an async\n    // operation, so render nothing.\n    return null;\n  }\n\n  // N.B. Signal allows strings containing only whitespace as authors. In these\n  // cases, use 'Anonymous' instead.\n  const author = stickerPack.manifest.author.trim() ? stickerPack.manifest.author : 'Anonymous';\n\n  return (\n    <div\n      className={cx(classes.stickerPackDetail, 'px-1 px-sm-4 py-4 mt-0 my-sm-4')}\n    >\n      {stickerPack.meta.nsfw && <NsfwModal />}\n\n      {/* Header */}\n      <div className=\"row mb-4 flex-column-reverse flex-lg-row\">\n        <div className=\"col-12 col-lg-8 mt-2 mt-lg-0\">\n          <h1>{stickerPack.manifest.title}</h1>\n          <button\n            type=\"button\"\n            role=\"link\"\n            title={`View more packs from ${author}`}\n            className=\"btn btn-link p-0 border-0 text-left\"\n            onClick={onAuthorClick}\n          >\n            {author}\n          </button>\n        </div>\n        <div className=\"col-12 col-lg-4 d-flex d-lg-block justify-content-between text-md-right mb-3 mb-lg-0\">\n          {stickerPack.meta.unlisted ?\n            null :\n            <Link to=\"/\" className=\"btn btn-light mr-2\">\n              <BsArrowLeftShort className=\"arrow-left-icon\" /> Back\n            </Link>\n          }\n          <ExternalLink\n            href={`https://signal.art/addstickers/#pack_id=${packId}&pack_key=${stickerPack.meta.key}`}\n            className=\"btn btn-primary\"\n            title=\"Add to Signal\"\n          >\n            <BsPlus className=\"plus-icon\" /> Add to Signal\n          </ExternalLink>\n        </div>\n      </div>\n\n      {/* Metadata Table */}\n      {!stickerPack.meta.unlisted &&\n        <div className=\"row mb-4\">\n          <div className=\"col-12 col-lg-9\">\n            <ul className=\"list-group\">\n\n              {/* Original */}\n              {stickerPack.meta.original &&\n                <li className=\"list-group-item text-wrap text-break\">\n                  <BsStarFill title=\"Original\" className=\"star-icon mr-4\" />\n                  This pack has been created exclusively for Signal by the artist, from original artworks.\n                </li>\n              }\n\n              {/* Animated */}\n              {stickerPack.meta.animated &&\n                <li className=\"list-group-item text-wrap text-break\">\n                  <BsFillCameraVideoFill title=\"Animated\" className=\"text-primary mr-4\" />\n                  This pack contains animated stickers!\n                </li>\n              }\n\n              {/* Editor's choice */}\n              {stickerPack.meta.editorschoice &&\n                <li className=\"list-group-item text-wrap text-break\">\n                  <BsFillHeartFill title=\"Editor's choice\" className=\"text-primary mr-4\" />\n                  Editor's choice: we love this pack!\n                </li>\n              }\n\n              {/* Source */}\n              {stickerPack.meta.source &&\n                <li className=\"list-group-item text-wrap text-break\">\n                  <BsAt title=\"Source\" className=\"mr-4 text-primary mention-icon\" />\n                  <div>\n                    <Linkify componentDecorator={linkifyHrefDecorator}>\n                      {stickerPack.meta.source}\n                    </Linkify>\n                  </div>\n                </li>\n              }\n\n              {/* Pack views */}\n              <li className=\"list-group-item text-wrap text-break\">\n                <ImEye className=\"mr-4 text-primary\" />  {stickerPack.meta.hotviews ?? 0} {pluralize('view', stickerPack.meta.hotviews)} last month, {stickerPack.meta.totalviews ?? 0} total\n              </li>\n\n              {/* Tags */}\n              {stickerPack.meta.tags && stickerPack.meta.tags.length > 0 &&\n                <li className=\"list-group-item\">\n                  <BsTag title=\"Tags\" className=\"mr-4 text-primary\" />\n                  <div className=\"text-wrap text-break mb-n1\">\n                    { stickerPack.meta.tags.map(tag => (\n                      <Tag key={tag} className=\"mb-1 mr-1\" label={tag} />\n                    ))}\n                  </div>\n                </li>\n              }\n            </ul>\n          </div>\n        </div>\n      }\n\n      {/* Stickers */}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className={classes.stickerGridView}>\n            {stickerPack.manifest.stickers.map(sticker => (\n              <Sticker\n                packId={packId}\n                packKey={stickerPack.meta.key}\n                stickerId={sticker.id}\n                key={sticker.id}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"nbStickers row justify-content-center align-items-center mt-4\">\n        <small className=\"mr-3\">\n          {stickerPack.manifest.stickers.length}\n          {' '}\n          {pluralize('sticker', stickerPack.manifest.stickers.length)}\n        </small>\n        <Link to={`/pack/${packId}/report`}>\n          <small>🚨 Report this pack</small>\n        </Link>\n      </div>\n    </div>\n  );\n}\n"],"names":["jsx","classes","jsxs","Fragment","StickersContext"],"mappings":"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"}