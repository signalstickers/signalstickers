{"version":3,"file":"Contribute-wt4Kr7Ko.js","sources":["../src/components/contribute/Contribute.tsx"],"sourcesContent":["import cx from 'classnames';\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage,\n  FieldValidator\n} from 'formik';\nimport * as R from 'ramda';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ExternalLink from 'components/general/ExternalLink';\nimport {\n  SIGNAL_ART_URL_PATTERN,\n  API_URL_CONTRIBUTIONREQUEST,\n  API_URL_CONTRIBUTE\n} from 'etc/constants';\nimport { getStickerPackDirectory, getStickerPack } from 'lib/stickers';\n\n/**\n * Test pack:\n * https://signal.art/addstickers/#pack_id=b2e52b07dfb0af614436508c51aa24eb&pack_key=66224990b3e956ad4a735830df8cd071275afeae79db9797e57d99314daffc77\n */\n\n\nexport interface FormValues {\n  signalArtUrl: string;\n  source: string;\n  tags: string;\n  isNsfw: 'true' | 'false' | null;\n  isOriginal: 'true' | 'false' | null;\n  secAnswer: string;\n  submitterComments: string;\n}\n\n\n/**\n * Regular expression used to validate lists of tags.\n */\nconst TAGS_PATTERN = /^(?:([\\w ]+))+(?:, ?([\\w ]+))*$/g;\n\n\n/**\n * Initial values for the form.\n */\nconst initialValues: FormValues = {\n  signalArtUrl: '',\n  source: '',\n  tags: '',\n  isNsfw: null,\n  isOriginal: null,\n  secAnswer: '',\n  submitterComments: ''\n};\n\n\n/**\n * Validators for each field in our form.\n */\nconst validators: Record<string, FieldValidator> = {\n  signalArtUrl: async (signalArtUrl: string) => {\n    if (!signalArtUrl) {\n      return 'This field is required.';\n    }\n\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(signalArtUrl);\n\n    if (!matches) {\n      return 'Invalid signal.art URL.';\n    }\n\n    const [, packId, packKey] = matches;\n\n    // @ts-expect-error\n    if (R.find(R.pathEq(['meta', 'id'], packId), await getStickerPackDirectory())) {\n      return 'A sticker pack with that ID already exists in the directory.';\n    }\n\n    try {\n      await getStickerPack(packId, packKey);\n    } catch {\n      return 'Invalid sticker pack. Please check the pack ID and key.';\n    }\n  },\n  source: (source: string) => {\n    if (source && source.length > 320) {\n      return 'This field must be no longer than 320 characters.';\n    }\n  },\n  tags: (tags: string) => {\n    if (tags !== '' && !new RegExp(TAGS_PATTERN).test(tags)) {\n      return 'Invalid value. Tags must be a list of comma-delimited strings.';\n    }\n  },\n  isNsfw: (isNsfw: boolean) => {\n    if (isNsfw === null) {\n      return 'This field is required.';\n    }\n  },\n  isOriginal: (isOriginal: boolean) => {\n    if (isOriginal === null) {\n      return 'This field is required.';\n    }\n  },\n  secAnswer: (secAnswer: string) => {\n    if (secAnswer === '') {\n      return 'This field is required.';\n    }\n  }\n};\n\n\nexport default function ContributePack() {\n  const [hasBeenSubmitted, setHasBeenSubmitted] = React.useState(false);\n  const [requestSent, setRequestSent] = React.useState(false);\n  const [contributionRequestToken, setContributionRequestToken] = React.useState('');\n  const [contributionRequestQuestion, setContributionRequestQuestion] = React.useState('');\n\n\n  /**\n   * Get a ContributionRequest token and question\n   */\n  const fetchContributionRequest = () => {\n    void fetch(API_URL_CONTRIBUTIONREQUEST, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(async x => x.json()).then(x => {\n      setContributionRequestQuestion(x.contribution_question);\n      setContributionRequestToken(x.contribution_id);\n    });\n  };\n\n\n  /**\n   * Get a ContributionRequest at loading\n   */\n  React.useEffect(() => {\n    setTimeout(() => {\n      fetchContributionRequest();\n    }, 3000); // Delaying the query helps reducing the load\n  }, []);\n\n\n  /**\n   * Sets 'hasBeenSubmitted' when the Submit button is clicked. We need this\n   * because Formik will not call our onSubmit function when the submit button\n   * is clicked _but_ validation fails. This makes sense, but because we want to\n   * change the way validation errors are presented to the user after the first\n   * submit attempt, we need to track \"attempts\" separately.\n   */\n  const onSubmitClick = React.useCallback(() => {\n    setHasBeenSubmitted(true);\n  }, [\n    setHasBeenSubmitted\n  ]);\n\n  /**\n   * Reset the form to its original state\n   */\n  // @ts-expect-error\n  const handleReset = React.useCallback(({ resetForm }) => {\n    fetchContributionRequest();\n    resetForm();\n    setRequestSent(false);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [\n    requestSent\n  ]);\n\n\n  /**\n   * Called when the form is submitted and has passed validation.\n   */\n  // @ts-expect-error\n  const onSubmit = React.useCallback((values: FormValues, { setErrors, setSubmitting }) => {\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(values.signalArtUrl);\n    if (!matches) {\n      throw new Error('Unable to extract pack ID and pack key from signal.art URL.');\n    }\n\n    const [, packId, packKey] = matches;\n\n    const tags = R.uniq(values.tags\n      .split(',')\n      .map(tag => tag.trim())\n      .filter(tag => tag.length));\n\n    const propositionData = {\n      pack: {\n        pack_id: packId,\n        pack_key: packKey,\n        source: values.source,\n        tags: tags,\n        nsfw: values.isNsfw === 'true' ? true : false,\n        original: values.isOriginal === 'true' ? true : false\n      },\n      contribution_id: contributionRequestToken,\n      contribution_answer: values.secAnswer,\n      submitter_comments: values.submitterComments\n    };\n\n    void fetch(API_URL_CONTRIBUTE, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(propositionData)\n    }).then(async response =>\n      response.json().then(data => ({\n        data: data,\n        status: response.status\n      })\n      ).then(res => {\n        if (res.status === 400) {\n          setErrors({\n            secAnswer: res.data.error\n          });\n          setRequestSent(false);\n          setSubmitting(false);\n          return;\n        }\n        setRequestSent(true);\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth'\n        });\n      }));\n\n  }, [contributionRequestQuestion, contributionRequestToken]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n\n  const stickerPackGuideLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://support.signal.org/hc/articles/360031836512-Stickers#h_c2a0a45b-862f-4d12-9ab1-d9a6844062ca\"\n      title=\"Sticker Creator Guidelines\"\n    >\n      Sticker Creator Guidelines\n    </ExternalLink>\n  ), []);\n\n  const contributionGuidelines = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://github.com/signalstickers/signalstickers#contribution-guidelines\"\n      title=\"Signalstickers' Contribution Guidelines\"\n    >\n      Signalstickers' Contribution Guidelines\n    </ExternalLink>\n  ), []);\n\n  return (\n    <div className=\"my-4 p-lg-3 px-lg-4\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1 className=\"mb-4\">Contribute</h1>\n          <p className=\"mt-lg-3 mb-4\">\n            To get your sticker pack listed in the Signal Stickers directory:\n          </p>\n          <ol>\n            <li className=\"mb-2\">\n              Create a sticker pack using the Signal desktop app. For help, see Signal's {stickerPackGuideLink}.\n              Be sure to save the <code>signal.art</code> URL for your pack. If you are creating a\n              sticker pack derived from an existing one on another platform or from someone else's\n              artwork, please consider using the original author's name in the <strong>Author</strong> field\n              when creating your pack in Signal, and consider adding their website, Twitter handle, or\n              other online presence to the <strong>Source</strong> field below.\n            </li>\n            <li className=\"mb-2\">\n              Fill this form. Please check that your pack is not already listed on the website.\n              Take the time to add tags, to help other users find your pack!\n            </li>\n            <li className=\"mb-2\">\n              We will review the pack, and if it meets the {contributionGuidelines}, it will be publicly available\n              on <code>signalstickers.org</code> !\n            </li>\n          </ol>\n          <p>\n            To check the status of your contribution, <Link to=\"/contribution-status\">click here.</Link>\n          </p>\n        </div>\n      </div>\n      <hr className=\"pt-3 pb-2\" />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 offset-md-1\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values, { setErrors, setSubmitting }) => onSubmit(values, { setErrors, setSubmitting })}\n            validateOnChange={hasBeenSubmitted}\n            validateOnBlur={hasBeenSubmitted}\n          >\n            {({ errors, isValidating, isSubmitting, resetForm }) => (\n              <Form noValidate>\n                {/* [Field] Signal.art Url */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <label className={cx('col-12', errors.signalArtUrl && 'text-danger')} htmlFor=\"signal-art-url\">\n                      Signal.art URL:\n                      <Field\n                        type=\"text\"\n                        id=\"signal-art-url\"\n                        name=\"signalArtUrl\"\n                        validate={validators.signalArtUrl}\n                        className={cx('form-control', 'mt-2', errors.signalArtUrl && 'is-invalid')}\n                        disabled={requestSent}\n                        placeholder=\"https://signal.art/addstickers/#pack_id=<your pack id>&pack_key=<your pack key>\"\n                      />\n                      <div>\n                        <ErrorMessage name=\"signalArtUrl\" />&nbsp;\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* [Field] Source */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <label className={cx('col-12', errors.source && 'text-danger')} htmlFor=\"source\">\n                      (Optional) Source:\n                      <Field\n                        type=\"text\"\n                        id=\"source\"\n                        name=\"source\"\n                        validate={validators.source}\n                        className={cx('form-control', 'mt-2', errors.source && 'is-invalid')}\n                        disabled={requestSent}\n                      />\n                      <small className=\"form-text text-muted\">Original author, website, company, etc.</small>\n                      <div>\n                        <ErrorMessage name=\"source\" />&nbsp;\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* [Field] Tags */}\n                <div className=\"form-group mb-4\">\n                  <div className=\"form-row\">\n                    <label className={cx('col-12', errors.tags && 'text-danger')} htmlFor=\"tags\">\n                      (Optional) Tags:\n                      <Field\n                        type=\"text\"\n                        id=\"tags\"\n                        name=\"tags\"\n                        validate={validators.tags}\n                        className={cx('form-control', 'mt-2', errors.tags && 'is-invalid')}\n                        disabled={requestSent}\n                      />\n                      <small className=\"form-text text-muted\">Comma-separated list of words.</small>\n                      <div>\n                        <ErrorMessage name=\"tags\" />&nbsp;\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* [Field] NSFW */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <legend className={cx('col-12', 'mb-2', 'fs-1', errors.isNsfw && 'text-danger')}>\n                      Is your sticker pack <ExternalLink href=\"https://www.urbandictionary.com/define.php?term=NSFW\" title=\"NSFW\">NSFW</ExternalLink>?\n                    </legend>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"col-12 mb-1\">\n                      <div className=\"custom-control custom-radio\">\n                        <Field\n                          type=\"radio\"\n                          id=\"is-nsfw-true\"\n                          name=\"isNsfw\"\n                          validate={validators.isNsfw}\n                          className={cx('custom-control-input', errors.isNsfw && 'is-invalid')}\n                          value=\"true\"\n                          disabled={requestSent}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"is-nsfw-true\">\n                          Yes\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"col-12 mb-1\">\n                      <div className=\"custom-control custom-radio\">\n                        <Field\n                          type=\"radio\"\n                          id=\"is-nsfw-false\"\n                          name=\"isNsfw\"\n                          validate={validators.isNsfw}\n                          className={cx('custom-control-input', errors.isNsfw && 'is-invalid')}\n                          value=\"false\"\n                          disabled={requestSent}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"is-nsfw-false\">No</label>\n                      </div>\n                      <div>\n                        <ErrorMessage name=\"isNsfw\" />&nbsp;\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* [Field] Original */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <legend className={cx('col-12', 'mb-2', 'fs-6', errors.isOriginal && 'text-danger')}>\n                      Is your pack original? Did the author of the pack draw it exclusively for Signal, from original artworks?\n                    </legend>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"col-12 mb-1\">\n                      <div className=\"custom-control custom-radio\">\n                        <Field\n                          type=\"radio\"\n                          id=\"is-original-true\"\n                          name=\"isOriginal\"\n                          validate={validators.isOriginal}\n                          className={cx('custom-control-input', errors.isOriginal && 'is-invalid')}\n                          value=\"true\"\n                          disabled={requestSent}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"is-original-true\">\n                          Yes\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"col-12 mb-1\">\n                      <div className=\"custom-control custom-radio\">\n                        <Field\n                          type=\"radio\"\n                          id=\"is-original-false\"\n                          name=\"isOriginal\"\n                          validate={validators.isOriginal}\n                          className={cx('custom-control-input', errors.isOriginal && 'is-invalid')}\n                          value=\"false\"\n                          disabled={requestSent}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"is-original-false\">No</label>\n                      </div>\n                      <div>\n                        <ErrorMessage name=\"isOriginal\" />&nbsp;\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* [Field] Security Answer */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <label className={cx('col-12', errors.secAnswer && 'text-danger')} htmlFor=\"secAnswer\">\n                      {contributionRequestQuestion}\n                      <Field\n                        type=\"text\"\n                        id=\"secAnswer\"\n                        name=\"secAnswer\"\n                        validate={validators.secAnswer}\n                        className={cx('form-control', 'mt-2', errors.secAnswer && 'is-invalid')}\n                        disabled={requestSent}\n                      />\n                      <small className=\"form-text text-muted\">This question helps us to make sure that you are not a robot. The answer is a single word or number, without quotes.</small>\n                      <div>\n                        <ErrorMessage name=\"secAnswer\" />&nbsp;\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* [Field] Submitter comments */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <label className=\"col-12\" htmlFor=\"submitterComments\">\n                      (Optional) Any comments?\n                      <Field\n                        as=\"textarea\"\n                        type=\"textarea\"\n                        id=\"submitterComments\"\n                        name=\"submitterComments\"\n                        className=\"form-control mt-2\"\n                        disabled={requestSent}\n                        maxLength=\"400\"\n                      />\n                      <small className=\"form-text text-muted\">This will only be visible to moderators. Do not enter personnal information. Or just say hello, we love it :-)</small>\n                    </label>\n                  </div>\n                </div>\n\n                {/* [Control] Submit and Reset */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <div className=\"col-12\">\n                      <button\n                        type=\"submit\"\n                        className={`btn btn-block btn-lg ${requestSent ? 'btn-success' : 'btn-primary '}`}\n                        disabled={isSubmitting || isValidating || requestSent}\n                        onClick={onSubmitClick}\n                      >\n                        {requestSent\n                          ? <span>Request sent, thanks!</span>\n                          : <span>Propose to signalstickers.org</span>\n                        }\n                        {isSubmitting}\n                      </button>\n                      {requestSent ?\n                        <button\n                          type=\"reset\"\n                          className=\"btn btn-block btn-lg btn-primary\"\n                          onClick={() => handleReset({ resetForm })}\n                        >\n                          Propose another pack\n                        </button>\n                      : ''\n                      }\n\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["R.find","R.pathEq","R.uniq","jsx","jsxs"],"mappings":"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"}