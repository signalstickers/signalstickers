{"version":3,"file":"ContributionStatus-BxwuSdvo.js","sources":["../src/components/contributionstatus/ContributionStatus.tsx"],"sourcesContent":["import cx from 'classnames';\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage,\n  FieldValidator,\n  type FormikHelpers\n} from 'formik';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { SIGNAL_ART_URL_PATTERN, API_URL_STATUS } from 'etc/constants';\n\n/**\n * Test pack:\n * https://signal.art/addstickers/#pack_id=b2e52b07dfb0af614436508c51aa24eb&pack_key=66224990b3e956ad4a735830df8cd071275afeae79db9797e57d99314daffc77\n */\n\n\nexport interface FormValues {\n  signalArtUrl: string;\n}\n\n\n/**\n * Initial values for the form.\n */\nconst initialValues: FormValues = {\n  signalArtUrl: ''\n};\n\n\n/**\n * Validators for each field in our form.\n */\nconst validators: Record<string, FieldValidator> = {\n  signalArtUrl: (signalArtUrl: string) => {\n    if (!signalArtUrl) {\n      return 'This field is required.';\n    }\n\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(signalArtUrl);\n    if (!matches) {\n      return 'Invalid signal.art URL.';\n    }\n  }\n};\n\n\nexport default function ContributionStatus() {\n  const [packInfo, setPackInfo] = React.useState({\n    error: '',\n    pack_id: '',\n    pack_title: '',\n    status: '',\n    status_comments: ''\n  });\n\n\n  /**\n   * Called when the form is submitted and has passed validation.\n   */\n  const onSubmit = React.useCallback((values: FormValues, { setSubmitting }: FormikHelpers<FormValues>) => {\n    const matches = new RegExp(SIGNAL_ART_URL_PATTERN).exec(values.signalArtUrl);\n    if (!matches) {\n      throw new Error('Unable to extract pack ID and pack key from signal.art URL.');\n    }\n\n    const [, packId, packKey] = matches;\n\n    void fetch(API_URL_STATUS, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pack_id: packId,\n        pack_key: packKey\n      })\n    }).then(async response =>\n      response.json().then(data => ({\n        data: data,\n        status: response.status\n      })\n      ).then(res => {\n        setPackInfo(res.data);\n        setSubmitting(false);\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth'\n        });\n      }));\n  }, [packInfo]);\n\n\n  return (\n    <div className=\"my-4 p-lg-3 px-lg-4\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h1 className=\"mb-4\">Contribution status</h1>\n          <p className=\"mt-lg-3 mb-4\">\n            If you proposed a pack via the Contribute page, you can use this form to check the status of your contribution!\n          </p>\n        </div>\n      </div>\n      <hr className=\"pt-3 pb-2\" />\n\n      { packInfo.error &&\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p className=\"mt-lg-3 mb-4\">\n              <b>Oops!</b> {packInfo.error}\n            </p>\n          </div>\n        </div>\n      }\n\n      { packInfo.status &&\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p className=\"mt-lg-3 mb-4\">\n\n              Your pack <b>{packInfo.pack_title}</b>\n              {packInfo.status === 'ONLINE' &&\n                <> is <b>published</b>! <Link to={`/pack/${packInfo.pack_id}`}>Check it here.</Link></>\n              }\n\n              {packInfo.status === 'IN_REVIEW' &&\n                <> is <b>still in review</b>! Real humans will soon check it.</>\n              }\n\n              {packInfo.status === 'REFUSED' &&\n                <> has <b>not been published</b>.</>\n              }\n              {packInfo.status_comments &&\n                <> Moderators left a comment: <em>{packInfo.status_comments}</em></>\n              }\n\n            </p>\n          </div>\n        </div>\n      }\n\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 offset-md-1\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values, helpers) => onSubmit(values, helpers)}\n          >\n            {({ errors, isValidating, isSubmitting }) => (\n              <Form noValidate>\n\n                {/* [Field] Signal.art Url */}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <label className={cx('col-12', errors.signalArtUrl && 'text-danger')} htmlFor=\"signal-art-url\">\n                      Signal.art URL:\n                      <Field\n                        type=\"text\"\n                        id=\"signal-art-url\"\n                        name=\"signalArtUrl\"\n                        validate={validators.signalArtUrl}\n                        className={cx('form-control', 'mt-2', errors.signalArtUrl && 'is-invalid')}\n                        placeholder=\"https://signal.art/addstickers/#pack_id=<your pack id>&pack_key=<your pack key>\"\n                      />\n                      <div>\n                        <ErrorMessage name=\"signalArtUrl\" />&nbsp;\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* [Control] Submit*/}\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <div className=\"col-12\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-block btn-lg btn-primary\"\n                        disabled={isSubmitting || isValidating}\n                      >\n                        {isSubmitting ?\n                          <span>Checking...</span>\n                        : <span>Check status</span>\n                        }\n                        {isSubmitting}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["jsxs","jsx","Fragment"],"mappings":"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"}