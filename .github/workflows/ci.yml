name: ci
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
env:
  FORCE_COLOR: 3
concurrency:
  group: ${{ github.ref_name }}
  # Only cancel concurrent builds when we are not on the default branch. This
  # way, if a commit breaks the default branch, we can more easily determine
  # which commit caused the failure.
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}
jobs:

  # ----- Build ----------------------------------------------------------------
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          # When dealing with pull requests, this ensures that we check out the
          # actual commit and not the merge commit from the PR.
          # See: https://github.com/actions/checkout#Checkout-pull-request-HEAD-commit-instead-of-merge-commit
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Try to load a cached version of our node_modules folder based on the
      # hash of our lockfile.
      - name: Use Dependencies Cache
        id: npm-cache
        uses: actions/cache@v4
        with:
          key: node-modules-${{ hashFiles('package-lock.json') }}
          path: node_modules

      # If no cache was found, install dependencies manually.
      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm clean-install

      # Setup action to cache build artifacts at end of job.
      - name: Cache Build Artifacts
        uses: actions/cache@v4
        id: build-cache
        with:
          key: build-${{ github.sha }}
          path: dist

      - name: Build Project
        run: npx nr build

  # ----- Deploy ---------------------------------------------------------------
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build ]
    # Only deploy from the default branch.
    if: github.ref_name == github.event.repository.default_branch
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY_KEY }}

      - name: Download Cached Build Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          key: build-${{ github.sha }}
          path: dist

      - if: steps.build-cache.outputs.cache-hit != 'true'
        uses: actions/github-script@v3
        with:
          script: core.setFailed('Unable to load cached build artifacts.')

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        with:
          branch: gh-pages
          folder: .
          single-commit: true
