{"version":3,"file":"Home-DmBMzQEk.js","sources":["../src/hooks/use-update-url.ts","../src/components/home/ToggleSwitch.tsx","../src/components/home/SearchInput.tsx","../src/components/home/StickerPackPreviewCard.tsx","../src/components/home/SearchResults.tsx","../src/components/home/Home.tsx"],"sourcesContent":["import queryString, { ParsedUrl } from 'query-string';\nimport * as R from 'ramda';\nimport { useHistory } from 'react-router-dom';\n\n\n/**\n * Provided an object representing a parsed URL, updates the URL with the\n * provided values. Will not trigger a page reload.\n *\n * @example\n *\n * const updateUrl = useUpdateUrl();\n *\n * // Add/update the 'foo' query parameter in the URL:\n * updateUrl({query: {foo: 'bar'}});\n */\nexport default function useUpdateUrl() {\n  const history = useHistory();\n\n  return (newValues: Partial<ParsedUrl>) => {\n    const currentUrl = queryString.parseUrl(history.location.pathname);\n    const newUrl = queryString.stringifyUrl(R.mergeDeepRight(currentUrl, newValues) as ParsedUrl, {\n      // This ensures that the search query param is removed from the URL when\n      // the search query is cleared.\n      skipEmptyString: true\n    });\n    history.replace(newUrl);\n  };\n}\n","import React from 'react';\nimport Switch from 'react-switch';\n\nimport { PRIMARY_DARKER, PRIMARY_LIGHTER } from 'etc/colors';\n\n\nexport interface ToggleSwitchProps {\n  id: string;\n  onToggle: CallableFunction;\n}\n\n\nexport default function ToggleSwitch({ id, onToggle }: ToggleSwitchProps) {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = React.useCallback(() => {\n    setChecked(state => !state);\n  }, [setChecked]);\n\n  React.useEffect(() => {\n    onToggle(checked);\n  }, [checked]);\n\n  return (\n    <Switch\n      checked={checked}\n      onChange={handleChange}\n      onColor={PRIMARY_LIGHTER}\n      onHandleColor={PRIMARY_DARKER}\n      handleDiameter={12}\n      uncheckedIcon={false}\n      checkedIcon={false}\n      boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n      activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n      height={10}\n      width={24}\n      className=\"react-switch\"\n      id={id}\n    />\n  );\n}\n","import cx from 'classnames';\nimport debounceFn from 'debounce-fn';\nimport React from 'react';\nimport { BsSearch, BsX } from 'react-icons/bs';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport { HashLink } from 'react-router-hash-link';\n\nimport StickersContext from 'contexts/StickersContext';\n\nimport classes from './SearchInput.css';\nimport ToggleSwitch from './ToggleSwitch';\n\n\nexport default function SearchInputComponent() {\n  const { searcher, searchQuery, searchResults, setSearchQuery, sortOrder, setSortOrder, setShowNsfw} = React.useContext(StickersContext);\n  const [searchQueryInputValue, setSearchQueryInputValue] = React.useState('');\n  const searchHelpRef = React.useRef<HTMLDivElement>(null);\n  const suggestedTags = ['cute', 'privacy', 'meme', 'for children'];\n\n\n  /**\n   * Allows us to de-bounce calls to setSearchQuery to avoid making excessive\n   * re-renders when the input value is updated.\n   */\n  const debouncedSetSearchQuery = debounceFn(setSearchQuery, { wait: 250 });\n\n\n  /**\n   * [Effect] Context state -> local/input state.\n   */\n  React.useEffect(() => {\n    if (searchQuery) {\n      setSearchQueryInputValue(searchQuery);\n    }\n  }, [searchQuery]);\n\n\n  /**\n   * [Event Handler] Input state -> local state.\n   */\n  const onSearchQueryInputChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setSearchQueryInputValue(value);\n  }, [\n    setSearchQueryInputValue\n  ]);\n\n  /**\n   * [Event Handler] Input order state -> local state.\n   */\n  const onSortOrderChange = React.useCallback((event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n    setSortOrder(value);\n  }, [\n    setSortOrder\n  ]);\n\n\n  /**\n   * [Effect] Local state -> context state (debounced).\n   */\n  React.useEffect(() => {\n    debouncedSetSearchQuery.cancel();\n    debouncedSetSearchQuery(searchQueryInputValue);\n\n    return () => {\n      debouncedSetSearchQuery.cancel();\n    };\n  }, [\n    debouncedSetSearchQuery,\n    searchQueryInputValue\n  ]);\n\n\n  /**\n   * [Event Handler] Sets the search query when a tag or the 'animated'\n   * suggestion is clicked.\n   */\n  const onSuggestionClick = React.useCallback((event: React.SyntheticEvent<HTMLButtonElement>) => {\n    if (searcher && event.currentTarget.textContent) {\n      switch (event.currentTarget.dataset.suggestionType) {\n        case 'tag':\n          setSearchQuery(searcher.buildQueryString({\n            attributeQueries: [{\n              tag: event.currentTarget.textContent\n            }]\n          }));\n          break;\n\n        case 'animated':\n          setSearchQuery(searcher.buildQueryString({\n            attributeQueries: [{\n              animated: 'true'\n            }]\n          }));\n          break;\n\n        case 'editorschoice':\n          setSearchQuery(searcher.buildQueryString({\n            attributeQueries: [{\n              editorschoice: 'true'\n            }]\n          }));\n          break;\n      }\n    }\n  }, [\n    searcher,\n    setSearchQuery\n  ]);\n\n\n  /**\n   * [Event Handler] Show the search help icon when the input element is\n   * focused.\n   */\n  const handleInputFocus = React.useCallback(() => {\n    if (!searchHelpRef.current) {\n      return;\n    }\n\n    searchHelpRef.current.style.opacity = '1';\n    searchHelpRef.current.style.pointerEvents = 'initial';\n  }, [\n    searchHelpRef\n  ]);\n\n\n  /**\n   * [Event Handler] Hide the search help icon when the input element is\n   * blurred. We also disable pointer events to prevent clicking on the element\n   * when it is not visible.\n   */\n  const handleInputBlur = React.useCallback(() => {\n    if (!searchHelpRef.current) {\n      return;\n    }\n\n    searchHelpRef.current.style.opacity = '0';\n\n    // Allows a click on the search help icon to proceed before disabling\n    // pointer events.\n    setTimeout(() => {\n      if (!searchHelpRef.current) {\n        return;\n      }\n\n      searchHelpRef.current.style.pointerEvents = 'none';\n    }, 250);\n  }, [\n    searchHelpRef\n  ]);\n\n\n  /**\n   * [Event Handler] Clears our context's search query state.\n   */\n  const clearSearchResults = React.useCallback((event: React.SyntheticEvent) => {\n    event.preventDefault();\n    setSearchQueryInputValue('');\n    setSearchQuery('');\n  }, [\n    setSearchQueryInputValue,\n    setSearchQuery\n  ]);\n\n  /**\n   * [Event Handler] Change either to show NSFW\n   */\n  const onNsfwToggle = (state: boolean) => {\n    setShowNsfw(state);\n  };\n\n\n  /**\n   * [Effect] When the component mounts, set the search input's value to the\n   * current search query from our context.\n   */\n  React.useEffect(() => {\n    if (searchQuery) {\n      setSearchQueryInputValue(searchQuery);\n    }\n  }, [searchQuery]);\n\n\n  /**\n   * [Effect] When the search query is updated, call our de-bounced update\n   * function.\n   */\n  React.useEffect(() => {\n    debouncedSetSearchQuery.cancel();\n    debouncedSetSearchQuery(searchQueryInputValue);\n\n    return () => {\n      debouncedSetSearchQuery.cancel();\n    };\n  }, [\n    debouncedSetSearchQuery,\n    searchQueryInputValue\n  ]);\n\n\n  /**\n   * [Memo] JSX fragment containing the set of suggested tags.\n   */\n  const tagsFragment = React.useMemo(() => suggestedTags.map(tag => (\n    <button\n      type=\"button\"\n      key={tag}\n      className={cx(classes.miniTag, 'btn', 'mr-1')}\n      onClick={onSuggestionClick}\n      data-suggestion-type=\"tag\"\n    >\n      {tag}\n    </button>\n  )), [suggestedTags]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  return (\n    <div className={cx(classes.searchInputWrapper, 'form-group', 'mb-4')}>\n      <div className=\"mb-1 position-relative\">\n        <div className={classes.searchPrepend}>\n          <BsSearch />\n        </div>\n        <input\n          type=\"text\"\n          key=\"search\"\n          className={cx(classes.searchInput, 'form-control', 'form-control-lg')}\n          onBlur={handleInputBlur}\n          onChange={onSearchQueryInputChange}\n          onFocus={handleInputFocus}\n          value={searchQueryInputValue}\n          title=\"Search\"\n          aria-label=\"search\"\n          autoComplete=\"off\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          spellCheck=\"false\"\n        />\n        <div className={classes.searchHelp} ref={searchHelpRef}>\n          <HashLink to=\"/about#searching\" title=\"Search Help\" className={classes.searchHelpLink}>\n            <FaInfoCircle className={cx(classes.searchHelpIcon, 'text-muted')} />\n          </HashLink>\n        </div>\n        <div className={classes.searchClear}>\n          <button\n            type=\"button\"\n            className={cx(classes.searchClearButton, 'btn', 'btn-link', 'border-0')}\n            title=\"Clear Search Results\"\n            onClick={clearSearchResults}\n          >\n            <BsX className={classes.searchClearIcon} />\n          </button>\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <small>\n            Suggested: {' '}\n          </small>\n          <br className=\"d-inline d-md-none\" />\n          <button\n            type=\"button\"\n            className={cx(\n              classes.miniTagAnimated,\n              'btn',\n              'mr-1'\n            )}\n            onClick={onSuggestionClick}\n            data-suggestion-type=\"animated\"\n          >\n            Animated\n          </button>\n          <button\n            type=\"button\"\n            className={cx(classes.miniTagEditorsChoice, 'btn', 'mr-1')}\n            onClick={onSuggestionClick}\n            data-suggestion-type=\"editorschoice\"\n          >\n            Editor's choice\n          </button>\n          {tagsFragment}\n        </div>\n        <div className=\"text-muted\">\n          <small>\n            {searchResults?.length || 0} {searchResults.length === 1 ? 'result' : 'results'}\n          </small>\n        </div>\n      </div>\n      <div className=\"mt-5 d-flex flex-wrap\">\n        <div className=\"mr-3\">\n          Sort by\n          <select className=\"d-inline-block form-control form-control-sm w-auto ml-2\" value={searchQuery ? 'relevance' : sortOrder} onChange={onSortOrderChange} disabled={searchQuery !== ''}>\n            <option value=\"\">Latest</option>\n            <option value=\"trending\">Trending</option>\n            <option value=\"mostViewed\">Most viewed (all times)</option>\n            {searchQuery &&\n              /* Only used as a placeholder when a searchQuery is set */\n              <option value=\"relevance\">Relevance</option>\n            }\n\n          </select>\n        </div>\n        <div>\n          <label className={classes.searchInputLabel} htmlFor=\"nsfwToggle\">\n            Show NSFW <ToggleSwitch id=\"nsfwToggle\" onToggle={onNsfwToggle} />\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable max-len */\nimport cx from 'classnames';\nimport React from 'react';\nimport useAsyncEffect from 'use-async-effect';\n\nimport { StickerPackPartial } from 'etc/types';\nimport { getConvertedStickerInPack } from 'lib/stickers';\n\nimport classes from './StickerPackPreviewCard.css';\n\n// ----- Props -----------------------------------------------------------------\n\nexport interface Props {\n  stickerPack: StickerPackPartial;\n}\n\n\nexport default function StickerPackPreviewCard(props: Props) {\n  const [cover, setCover] = React.useState<string | undefined>();\n  const { meta, manifest } = props.stickerPack;\n\n\n  /**\n   * [Effect] Loads a sticker pack's cover image when the component mounts.\n   */\n  useAsyncEffect(async () => {\n    try {\n      if (manifest.cover === undefined) {\n        manifest.cover = { id: 0, emoji: '' };\n      }\n      if (meta.id !== undefined) {\n        const coverImage = await getConvertedStickerInPack(meta.id, meta.key, manifest.cover.id);\n        setCover(coverImage);\n      }\n    } catch (err: any) {\n      console.error(`[StickerPackPreviewCard::Effect::GetCover] ${err.message}`);\n    }\n  }, [\n    meta.id,\n    meta.key,\n    manifest\n  ]);\n\n\n  const originalAnnotation = React.useMemo(() => (\n    <aside className={cx(classes.originalAnnotation, 'shadow-sm')}>\n      Original\n    </aside>\n  ), []);\n\n\n  const animatedAnnotation = React.useMemo(() => (\n    <aside className={cx(classes.animatedAnnotation, 'shadow-sm')}>\n      Animated\n    </aside>\n  ), []);\n\n\n  const title = `${manifest.title}${meta.nsfw ? ' (NSFW)' : ''}`;\n\n\n  return (\n    <div\n      className={cx(classes.stickerPackPreviewCard, 'card')}\n      aria-label={title}\n    >\n      {meta.original && originalAnnotation}\n      {meta.animated && animatedAnnotation}\n      {cover ?\n        <img\n          className={classes.cardImageTop}\n          style={{\n            filter: meta.nsfw ? 'blur(4px)' : 'none'\n          }}\n          src={cover}\n          alt=\"Cover\"\n        /> :\n        <div\n          className={classes.cardImageTop}\n          style={{\n            filter: meta.nsfw ? 'blur(4px)' : 'none'\n          }}\n        >\n          {' '}\n        </div>\n      }\n      <div className={cx(classes.cardHeader, 'card-header')}>\n        {title}\n      </div>\n    </div>\n  );\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Waypoint} from 'react-waypoint';\n\nimport StickersContext from 'contexts/StickersContext';\n\nimport classes from './SearchResults.css';\nimport StickerPackPreviewCard from './StickerPackPreviewCard';\n\n\n/**\n * How many items we will load each time loadMore() is called.\n */\nconst PAGE_SIZE = 64;\n\n\nexport default function StickerPackListComponent() {\n  const {searchResults, showNsfw} = React.useContext(StickersContext);\n  // Used by Waypoint to persist the component across re-renders.\n  const [cursor, setCursor] = React.useState(0);\n  // Subset of total search results that have been rendered.\n  const [renderedSearchResults, setRenderedSearchResults] = React.useState<typeof searchResults>([]);\n\n\n  /**\n   * Adds PAGE_SIZE items from searchResults to renderedSearchResults and\n   * updates the cursor.\n   */\n  const loadMore = React.useCallback(() => {\n    // If we have rendered all search results, bail.\n    if (renderedSearchResults.length >= searchResults.length) {\n      return;\n    }\n\n    const newCursor = cursor + PAGE_SIZE;\n    setCursor(newCursor);\n    setRenderedSearchResults(R.take(newCursor, searchResults));\n  }, [\n    cursor,\n    searchResults,\n    renderedSearchResults\n  ]);\n\n\n  /**\n   * [Effect] When the list of search results is updated, re-set our rendered\n   * search results and cursor.\n   */\n  React.useLayoutEffect(() => {\n    setCursor(0);\n    setRenderedSearchResults([]);\n    loadMore();\n  }, [searchResults]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  return (\n    <div className=\"row\">\n      {renderedSearchResults.map(result => {\n        if (!result.item.meta.nsfw || result.item.meta.nsfw && showNsfw){\n          return (\n            <div\n              key={result.item.meta.id}\n              className=\"col-6 col-md-4 col-lg-3 mb-4\"\n            >\n              <Link\n                to={`/pack/${result.item.meta.id}`}\n                className={classes.stickerPackLink}\n              >\n                <StickerPackPreviewCard stickerPack={result.item} />\n              </Link>\n            </div>\n          );\n        }\n        return null;\n      })}\n      <Waypoint\n        key={cursor}\n        onEnter={loadMore}\n        bottomOffset=\"-500px\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ExternalLink from 'components/general/ExternalLink';\nimport Context from 'contexts/StickersContext';\nimport { SEARCH_QUERY_PARAM } from 'etc/constants';\nimport useQuery from 'hooks/use-query';\nimport useUpdateUrl from 'hooks/use-update-url';\n\nimport SearchInput from './SearchInput';\nimport StickerPackList from './SearchResults';\n\n\nexport default function Home() {\n  const {searchQuery, setSearchQuery} = React.useContext(Context);\n  const query = useQuery();\n  const updateUrl = useUpdateUrl();\n\n\n  /**\n   * Perform a one-time URL-to-state sync when the component mounts.\n   */\n  React.useEffect(() => {\n    const searchQueryFromUrl = query[SEARCH_QUERY_PARAM] ?? null;\n\n    if (typeof searchQueryFromUrl === 'string') {\n      setSearchQuery(searchQueryFromUrl);\n    }\n  }, []);\n\n\n  /**\n   * Perform a state-to-URL sync when the search query changes.\n   */\n  React.useEffect(() => {\n    updateUrl({\n      query: {\n        // Coerce empty strings to null to cause the query param to be\n        // removed from the URL when the search query is cleared.\n        [SEARCH_QUERY_PARAM]: searchQuery\n      }\n    });\n  }, [searchQuery]);\n\n\n  const stickerPackLink = React.useMemo(() => (\n    <ExternalLink\n      href=\"https://support.signal.org/hc/en-us/articles/360031836512-Stickers\"\n      title=\"Stickers - Signal Support\"\n    >\n      sticker packs\n    </ExternalLink>\n  ), []);\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-12 mt-4 mb-1 mb-md-3 pt-lg-2\">\n          <p className=\"intro\">\n            Welcome to Signal Stickers, the unofficial directory for Signal {stickerPackLink}.\n            You can filter packs by title, author, or tags.\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <SearchInput />\n        </div>\n      </div>\n      <StickerPackList />\n    </>\n  );\n}\n"],"names":["R.mergeDeepRight","jsx","Switch","StickersContext","classes","jsxs","R.take","Fragment","SearchInput","StickerPackList"],"mappings":"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"}